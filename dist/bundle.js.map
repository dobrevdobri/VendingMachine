{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/classes/Coin.ts","webpack:///./src/classes/Drink.ts","webpack:///./src/classes/VendingMachine.ts","webpack:///./src/index.ts"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","export default class Coin{\r\n    private _id: number;\r\n    private _value: number;\r\n    private _amount: number;\r\n\r\n    public get amount(): number {\r\n        return this._amount;\r\n    }\r\n    public set amount(value: number) {\r\n        this._amount = value;\r\n    }\r\n\r\n    public get value(): number {\r\n        return this._value;\r\n    }\r\n    public set value(value: number) {\r\n        this._value = value;\r\n    }\r\n\r\n    public get id(): number {\r\n        return this._id;\r\n    }\r\n    public set id(value: number) {\r\n        this._id = value;\r\n    }\r\n\r\n    constructor(id: number, value: number, amount: number){\r\n        this.id = id;\r\n        this.value = value;\r\n        this.amount = amount;\r\n    }\r\n\r\n    returnCoin(amount: number): void{\r\n        this.amount-= amount;\r\n    }\r\n    addCoin(): void{\r\n        this.amount++;\r\n    }\r\n    loadCoins(amount: number){\r\n        this.amount += amount;\r\n    }\r\n}","export default class Drink{\r\n    private _id: number;\r\n\r\n    private _name: string;\r\n    private _price: number;\r\n    private _amount: number;\r\n\r\n    public get id(): number {\r\n        return this._id;\r\n    }\r\n    public set id(value: number) {\r\n        this._id = value;\r\n    }\r\n\r\n    public get name(): string {\r\n        return this._name;\r\n    }\r\n    public set name(value: string) {\r\n        this._name = value;\r\n    }\r\n\r\n    public get amount(): number {\r\n        return this._amount;\r\n    }\r\n    public set amount(value: number) {\r\n        this._amount = value;\r\n    }\r\n\r\n    public get price(): number {\r\n        return this._price;\r\n    }\r\n    public set price(value: number) {\r\n        this._price = value;\r\n    }\r\n\r\n    constructor(id: number, name: string, price: number, amount: number){\r\n        this.id = id;\r\n        this.name = name;\r\n        this.price = price;\r\n        this.amount = amount;\r\n    }\r\n\r\n    sell() :void{\r\n        this.amount--;\r\n    }\r\n\r\n    load(loadingAmount: number):void{\r\n        this.amount += loadingAmount;\r\n    }\r\n}","import Drink from \"./Drink\"\r\nimport Coin from \"./Coin\";\r\n\r\n\r\nexport default class VendingMachine{\r\n    private stockDrinks: Drink[] = [];\r\n    private stockCoins: Coin[] = [];\r\n    private serviceFlag: boolean = false;\r\n    private coinFlag: boolean = true;\r\n\r\n\r\n    // define the initial drinks stored in the vending machine\r\n    loadInitialDrinks(drink: any): void{\r\n        this.stockDrinks.push(new Drink(drink.id, drink.name, drink.price, drink.amount));\r\n    }\r\n    // define the initial coins stored in the vending machine\r\n    loadInitialCoins(coin: any): void{\r\n        this.stockCoins.push(new Coin(coin.id, coin.value, coin.amount));\r\n    }\r\n\r\n    private sellDrink(id: number): void{\r\n        let totalInserted = 0;\r\n        let selectedDrink: Drink;\r\n        this.stockDrinks.forEach(drink =>{\r\n            if(drink.id === id){\r\n                selectedDrink = drink\r\n            }\r\n        })\r\n\r\n        if(selectedDrink.amount > 0){\r\n            let inserted: any;\r\n            let insertedParsed: number;\r\n            let rest: any;\r\n            let restParsed: number;\r\n            do {\r\n                inserted = prompt(selectedDrink.name + \" will cost you \" + selectedDrink.price + \" Euro\\nPut your coins \\nThe machine takes only 0.10, 0.20, 0.50, 1 or 2 Euro\");\r\n                if(inserted === null){\r\n                    this.stopMachine();\r\n                    return\r\n                }\r\n                insertedParsed = parseFloat(inserted);\r\n            } \r\n            while(insertedParsed !== 0.1 && insertedParsed !== 0.2 && insertedParsed !== 0.5 &&insertedParsed !== 1 && insertedParsed !== 2){\r\n                totalInserted += insertedParsed;\r\n                this.collectCoins(insertedParsed);\r\n                while(totalInserted < selectedDrink.price ){\r\n                    do{\r\n                        rest = prompt(\"Please put \" + (selectedDrink.price - totalInserted).toFixed(1) + \" Euro more. The machine takes only 0.10, 0.20, 0.50, 1 or 2 Euro\");\r\n                        if(rest === null){\r\n                            this.stopMachine();\r\n                            return\r\n                        }\r\n                        restParsed = parseFloat(rest);\r\n                    } while (restParsed !== 0.1 && restParsed !== 0.2 && restParsed !== 0.5 &&restParsed !== 1 && restParsed !== 2){\r\n                        totalInserted += restParsed;\r\n                        this.collectCoins(restParsed);\r\n                    }\r\n                }\r\n            }\r\n            console.log(\"Please take your drink...\")\r\n            selectedDrink.sell();\r\n\r\n            // checks amounts after each sell\r\n            this.checkDrinkAmounts();\r\n\r\n\r\n            if(totalInserted > selectedDrink.price){\r\n                let change = (totalInserted - selectedDrink.price).toFixed(1);\r\n                let changeParsed = parseFloat(change);\r\n                console.log(\"Your change is: \", changeParsed + \" Euro\");\r\n                this.generateCoinChange(changeParsed);\r\n            }\r\n        } else {\r\n            console.error(\"Sorry the selected drink is sold out\");\r\n        }\r\n    }\r\n\r\n    private collectCoins(value: number): void{\r\n        this.stockCoins.forEach(coin => {\r\n            if(coin.value === value){\r\n                coin.addCoin();\r\n            }\r\n        })\r\n    }\r\n\r\n    private generateCoinChange (change: number) :void{\r\n        // convert it to cents\r\n        change *= 100;\r\n\r\n        console.log(\"Please take your change...\")\r\n\r\n        let twoEuro = Math.floor(change/200);\r\n        this.returnCoins(5, twoEuro);\r\n        if(this.coinFlag){\r\n            change -= 200 * twoEuro\r\n            console.log(`2 Euro: ${twoEuro}`)\r\n        }\r\n\r\n        let oneEuro = Math.floor(change/100);\r\n        this.returnCoins(4, oneEuro);\r\n        if(this.coinFlag){\r\n            change -= 100 * oneEuro\r\n            console.log(`1 Euro: ${oneEuro}`)\r\n        }\r\n\r\n        let fifty = Math.floor(change/50);\r\n        this.returnCoins(3, fifty);\r\n        if(this.coinFlag){\r\n            change -= 50 * fifty\r\n            console.log(`0.50: ${fifty}`)\r\n        }\r\n\r\n        let twenty = Math.floor(change/20);\r\n        this.returnCoins(2, twenty);\r\n        if(this.coinFlag){\r\n            change -= 20 * twenty\r\n            console.log(`0.20: ${twenty}`)\r\n        }\r\n\r\n        let ten = Math.floor(change/10);\r\n        this.returnCoins(1, ten);\r\n        if(this.coinFlag){\r\n            change -= 10 * ten\r\n            console.log(`0.10: ${ten}`)\r\n        }\r\n    };\r\n\r\n    private returnCoins(id: number, amount: number): void{\r\n        this.coinFlag = true;\r\n        let coinDenomination: Coin;\r\n        this.stockCoins.forEach(coin => {\r\n            if(coin.id === id ){\r\n                coinDenomination = coin;\r\n            }\r\n        })\r\n        //checks the amount of the coin\r\n        if(coinDenomination.amount < 1){\r\n            // warning, should be refilled with coins\r\n            console.warn(\"Please refill with \" + coinDenomination.value + \" Euro cents!\");\r\n            this.coinFlag = false;\r\n        } else {\r\n            coinDenomination.returnCoin(amount);\r\n        }\r\n    }\r\n\r\n    private checkDrinkAmounts(){\r\n        // if some of the drinks is sold out\r\n        this.stockDrinks.forEach(drink =>{\r\n            if(drink.amount < 1){\r\n                // warning, should be refilled with drinks\r\n                console.warn(\"Please refill with \" + drink.name + \" drink!\");\r\n            }\r\n        });\r\n    }\r\n\r\n    startMachine():void {\r\n        console.log(\"Machine is running...\");\r\n\r\n        // the machine will run untill the flag is down\r\n        while(!this.serviceFlag){\r\n            let selection: any;\r\n            do {\r\n                selection = prompt(\"Hi, please choose a drink. \\n 1 -> Mineral Water \\n 2 -> Mineral Water with gas\\n 3 -> Cola\\n 4 -> Fanta\\n 5 -> Sprite\\n 6 -> Heineken\\n 7 -> Beck's\\n 8 -> SERVICE\");\r\n                if(selection === null){\r\n                    this.stopMachine()\r\n                    return;\r\n                }\r\n                selection = parseInt(selection);\r\n            } while (selection !== 1 && selection !== 2 && selection !== 3 && selection !== 4 && selection !== 5 && selection !== 6 && selection !== 7 && selection !== 8){\r\n                if(selection === 8 ){\r\n                    console.log(\"Service mode...\")\r\n                    let setviceSelection: any;\r\n                    let setviceSelectionParsed: number;\r\n                    do{\r\n                        setviceSelection = prompt(\"1 -> Fill up drinks\\n2 -> Collect coins\\n3 -> Fill up coins\");\r\n                        if(setviceSelection === null){\r\n                            this.stopMachine();\r\n                            return\r\n                        }\r\n                        setviceSelectionParsed = parseFloat(setviceSelection);\r\n                    } while (setviceSelectionParsed !== 1 && setviceSelectionParsed !== 2 && setviceSelectionParsed !== 3){\r\n                        if(setviceSelectionParsed === 1){\r\n                            this.fillUpDrinks();\r\n                        } else if (setviceSelectionParsed === 2){\r\n                            this.emptyCoins();\r\n                        } else {\r\n                            this.fillUpCoins();\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.sellDrink(selection);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private stopMachine(){\r\n        this.serviceFlag = true;\r\n        console.log(\"Machine has stopped!\");\r\n    }\r\n    private fillUpDrinks(){\r\n        let drinkID: any;\r\n        let drinkIDParsed: number;\r\n\r\n        do{\r\n            drinkID = prompt(\"Enter drink ID from 1 to 7...\\n 1 -> Mineral Water \\n 2 -> Mineral Water with gas\\n 3 -> Cola\\n 4 -> Fanta\\n 5 -> Sprite\\n 6 -> Heineken\\n 7 -> Beck's\");\r\n            if(drinkID === null){\r\n                this.stopMachine();\r\n                return\r\n            }\r\n            drinkIDParsed = parseInt(drinkID);\r\n        } while (drinkIDParsed !== 1 && drinkIDParsed !== 2 && drinkIDParsed !== 3 && drinkIDParsed !== 4 && drinkIDParsed !== 5 && drinkIDParsed !== 6 && drinkIDParsed !== 7){\r\n            let drinkToFill: Drink;\r\n            let amountToAdd: any;\r\n            let amountToAddParsed: number;\r\n            this.stockDrinks.forEach(drink =>{\r\n                if(drink.id === drinkIDParsed){\r\n                    drinkToFill = drink;\r\n                }\r\n            })\r\n            do{\r\n                amountToAdd = prompt(\"Enter amount (whole number)...\");\r\n                if(amountToAdd === null){\r\n                    this.stopMachine();\r\n                    return\r\n                }\r\n                amountToAddParsed = parseInt(amountToAdd);\r\n            }                 \r\n            while(isNaN(amountToAddParsed)){\r\n                drinkToFill.load(amountToAddParsed);\r\n                console.log(amountToAddParsed + \" bottles of \" + drinkToFill.name + \" added successfully!\");\r\n                console.log(\"The current amount is \" + drinkToFill.amount);\r\n            }\r\n        }\r\n    }\r\n\r\n    private emptyCoins(){\r\n        let coinID: any;\r\n        let coinIDParsed: number;\r\n\r\n        do{\r\n            coinID = prompt(\"Enter coin ID from 1 to 5...\\n 1 -> 0.10 Euro\\n 2 -> 0.20 Euro\\n 3 -> 0.50 Euro\\n 4 -> 1.00 Euro\\n 5 -> 2.00 Euro\");\r\n            if(coinID === null){\r\n                this.stopMachine();\r\n                return\r\n            }\r\n            coinIDParsed = parseInt(coinID);\r\n        } while (coinIDParsed !== 1 && coinIDParsed !== 2 && coinIDParsed !== 3 && coinIDParsed !== 4 && coinIDParsed !== 5){\r\n            let coinToCollect: Coin;\r\n            let amountToCollect: any;\r\n            let amountToCollectParsed: number;\r\n            this.stockCoins.forEach(coin =>{\r\n                if(coin.id === coinIDParsed){\r\n                    coinToCollect = coin;\r\n                }\r\n            })\r\n            do{\r\n                amountToCollect = prompt(\"Enter amount (whole number)...\");\r\n                if(amountToCollect === null){\r\n                    this.stopMachine();\r\n                    return\r\n                }\r\n                amountToCollectParsed = parseInt(amountToCollect);\r\n            }                 \r\n            while(isNaN(amountToCollectParsed)){\r\n                if(amountToCollect > coinToCollect.amount){\r\n                    console.log(\"Sorry, there are not enough coins!\")\r\n                    console.log(\"The current amount is \" + coinToCollect.amount);\r\n                } else {\r\n                    coinToCollect.returnCoin(amountToCollectParsed);\r\n                    console.log(amountToCollectParsed + \" coins of \" + coinToCollect.value + \" cents collected successfully!\");\r\n                    console.log(\"The current amount is \" + coinToCollect.amount);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private fillUpCoins(){\r\n        let coinID: any;\r\n        let coinIDParsed: number;\r\n\r\n        do{\r\n            coinID = prompt(\"Enter coin ID from 1 to 5...\\n 1 -> 0.10 Euro\\n 2 -> 0.20 Euro\\n 3 -> 0.50 Euro\\n 4 -> 1.00 Euro\\n 5 -> 2.00 Euro\");\r\n            if(coinID === null){\r\n                this.stopMachine();\r\n                return\r\n            }\r\n            coinIDParsed = parseInt(coinID);\r\n        } while (coinIDParsed !== 1 && coinIDParsed !== 2 && coinIDParsed !== 3 && coinIDParsed !== 4 && coinIDParsed !== 5){\r\n            let coinToFill: Coin;\r\n            let amountToAdd: any;\r\n            let amountToAddParsed: number;\r\n            this.stockCoins.forEach(coin =>{\r\n                if(coin.id === coinIDParsed){\r\n                    coinToFill = coin;\r\n                }\r\n            })\r\n            do{\r\n                amountToAdd = prompt(\"Enter amount (whole number)...\");\r\n                if(amountToAdd === null){\r\n                    this.stopMachine();\r\n                    return\r\n                }\r\n                amountToAddParsed = parseInt(amountToAdd);\r\n            }                 \r\n            while(isNaN(amountToAddParsed)){\r\n                coinToFill.loadCoins(amountToAddParsed);\r\n                console.log(amountToAddParsed + \" coins of \" + coinToFill.value + \" added successfully!\");\r\n                console.log(\"The current amount is \" + coinToFill.amount);\r\n            }\r\n        }\r\n    }\r\n}","import VendingMachine from \"./classes/VendingMachine\"\r\n\r\nlet allDrinks: any[] = [\r\n    {\r\n        id: 1,\r\n        name: \"Mineral Water\",\r\n        price: 1.20,\r\n        amount: 1\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Mineral Water with gas\",\r\n        price: 1.50,\r\n        amount: 10\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Cola\",\r\n        price: 2,\r\n        amount: 10\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Fanta\",\r\n        price: 2,\r\n        amount: 10\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Sprite\",\r\n        price: 2,\r\n        amount: 10\r\n    },\r\n    {\r\n        id: 6,\r\n        name: \"Heineken\",\r\n        price: 3,\r\n        amount: 10\r\n    },\r\n    {\r\n        id: 7,\r\n        name: \"Beck's\",\r\n        price: 3,\r\n        amount: 10\r\n    }\r\n\r\n]\r\nlet allCoins: any[] = [\r\n    {\r\n        id: 1,\r\n        value: 0.1,\r\n        amount: 20\r\n    },\r\n    {\r\n        id: 2,\r\n        value: 0.2,\r\n        amount: 1\r\n    },\r\n    {\r\n        id: 3,\r\n        value: 0.5,\r\n        amount: 20\r\n    },\r\n    ,\r\n    {\r\n        id: 4,\r\n        value: 1,\r\n        amount: 20\r\n    },\r\n    {\r\n        id: 5,\r\n        value: 2,\r\n        amount: 20\r\n    }\r\n]\r\n\r\nlet vendingMachine: VendingMachine = new VendingMachine();\r\n\r\nallDrinks.forEach(drink => {\r\n    vendingMachine.loadInitialDrinks(drink); \r\n});\r\n\r\nallCoins.forEach(coin =>{\r\n    vendingMachine.loadInitialCoins(coin);\r\n})\r\n\r\nvendingMachine.startMachine();\r\n"],"sourceRoot":""}